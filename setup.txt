Build Tool:
Java - Maven,gradle 

Python -pybuilder

dotnet -nant


Maven:

java
sudo yum install java-1.8.0-amazon-corretto -y


https://github.com/rajusw804/Maven-Tomcat-Nexus-Sonar-Setup

pom - project object Model

jar - java archieve
war - web archieve
ear - enterprise archieve

repositires in Maven:
local :.m2

remote
centeral  https://repo.maven.apache.org/maven2/org/


validate
compile
package
install
deploy

clean

https://medium.com/@raguyazhin/step-by-step-guide-to-install-apache-tomcat-on-amazon-linux-120748a151a9

cd /opt

#Download tomcat binary
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.100/bin/apache-tomcat-9.0.100.tar.gz

#unzip tomcat binary
tar -zvxf apache-tomcat-9.0.100.tar.gz

cd apache-tomcat-9.0.100

cd bin

chmod +x startup.sh

chmod +x shutdown.sh


./startup.sh

cd apache-tomcat-9.0.100
vi ./webapps/examples/META-INF/context.xml
vi ./webapps/host-manager/META-INF/context.xml
vi ./webapps/manager/META-INF/context.xml


cd apache-tomcat-9.0.55
cd conf

vi apache-tomcat-9.0.55/conf/tomcat-users.xml
	<role rolename="manager-gui"/>
	<role rolename="manager-script"/>
	<role rolename="manager-jmx"/>
	<role rolename="manager-status"/>   
	<user username="admin" password="admin" roles="manager-gui,manager-script,manager-jmx,manager-status"/>
	<user username="deployer" password="deployer" roles="manager-script"/>
	<user username="tomcat" password="s3cret" roles="manager-gui"/>








Installation of nexus and sonar in Ubuntu --> Nexus 8081 and sonar 9000
Nexus:
sudo apt update

sudo apt install openjdk-8-jdk git tree maven wget unzip -y 

cd /opt/

sudo wget https://sonatype-download.global.ssl.fastly.net/repository/downloads-prod-group/3/nexus-3.29.2-02-unix.tar.gz

sudo mkdir /opt/nexus

sudo tar xzf nexus-3.29.2-02-unix.tar.gz -C /opt/nexus --strip-components=1

vi /opt/nexus/bin/nexus.rc
 run_as_user="root"
 
vi /opt/nexus/bin/nexus.vmoptions
 change ../sonatype-work to ./sonatype-work

sudo /opt/nexus/bin/nexus start

sudo cat /opt/nexus/sonatype-work/nexus3/admin.password

----------------------------------------------

SonarQube:
sudo apt-get update

sysctl -w vm.max_map_count=262144
sudo sysctl -w fs.file-max=65536
ulimit -n 65536
ulimit -u 4096


sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -
sudo apt-get install postgresql postgresql-contrib -y
sudo systemctl start postgresql
systemctl enable postgresql
sudo passwd postgres
su - postgres

> Create a new user by typing:
   createuser sonar
> Switch to the PostgreSQL shell.
   psql
> Set a password for the newly created user for SonarQube database.
   ALTER USER sonar WITH ENCRYPTED password 'sonar';
> Create a new database for PostgreSQL database by running:
    CREATE DATABASE sonarqube OWNER sonar;
> grant all privileges to sonar user on sonarqube Database.
   grant all privileges on DATABASE sonarqube to sonar;
> Exit from the psql shell:
   \q
> Switch back to the sudo user by running the exit command.
   exit

sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.9.1.44547.zip
sudo unzip sonarqube-8.9.1.44547.zip -d /opt
sudo mv /opt/sonarqube-8.9.1.44547/ /opt/sonarqube
sudo groupadd sonar
sudo useradd -c "user to run SonarQube" -d /opt/sonarqube -g sonar sonar
sudo chown sonar:sonar /opt/sonarqube -R

vi /opt/sonarqube/conf/sonar.properties
sonar.jdbc.username=sonar
sonar.jdbc.password=sonar
sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonarqube

vi /opt/sonarqube/bin/linux-x86-64/sonar.sh
RUN_AS_USER=sonar

cd /opt/sonarqube/bin/linux-x86-64/
./sonar.sh start
./sonar.sh status

Port : 9000
Login to SonarQube  with default administrator username and password is admin.

------------------------------------------------------------------------------------
